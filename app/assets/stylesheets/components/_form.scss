h1 {font-weight: 500;}
h2 {
  font-weight: 500;
  font-size: 26px;
}

.form-align-center {
  height: calc(50vh);
  display: flex;
  align-items: center;
}

.option-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 24px;
  margin-top: 24px;
}

.option-card {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 160px;
  aspect-ratio: 1;
  border-radius: 100%;
  gap: 20px;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  text-align: center;
  background-color: $info;
  margin: 16px;
  transition: all 0.3s ease-in-out;
  transform-origin: center;
}

.option-card-genre {
  cursor: pointer;
  background-color: $info;
  margin: 16px;
  &:hover {
    background-color: $orange;
  }
}

.option-card-genre:has(.hidden-radio:checked) {
  background-color: $orange;
  color: white;
}



.option-label {
  font-size: 24px;
  font-weight: 400;
  color: $gray;
}

.sm {
  height: 40px;
  width: 100%;
  font-size: 16px !important;
  border-radius: 25px;
  align-content: center;
  border: 0px !important;
}

.hidden-radio {
  display: none;
}


.option-card:has(.hidden-radio:checked) {
  background-color: $orange;
  color: white;
}

$n: 5;
$n2: 10;
$n3: 15;

@keyframes wiggle {
  0%   { transform: rotate(0deg); }
  25%  { transform: rotate(1deg); }
  50%  { transform: rotate(-1deg); }
  75%  { transform: rotate(1deg); }
  100% { transform: rotate(0deg); }
}

#difficulty-easy {

  .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
  background-color: transparent;
  color: white;
  border: 0px;
  }

  &:hover {
    --r: 45px; /* the radius of the small circles */
    width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n})));
    aspect-ratio: 1;
    $m: (); /* empty variable */
    /* loop through the number of circles*/
    @for $i from 1 through ($n) {
      $m: append($m,
        radial-gradient(50% 50%,#000 98%,#0000) no-repeat
        calc(50% + 50%*cos(360deg*#{$i/$n}))
        calc(50% + 50%*sin(360deg*#{$i/$n}))
      / calc(2*var(--r)) calc(2*var(--r)),
      comma);
    }
    mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n})),#0000 calc(var(--r)/tan(180deg/#{$n}) + 1px)),#{$m};
    background: $green;
    animation: wiggle 1s ease-in-out infinite;

    .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
      background-color: transparent;
      color: white;
      border-color: $green;
    }

    .option-label {
      color: white;
    }
  }
}
#difficulty-medium {

  .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
    background-color: transparent;
    color: white;
    border: 0px;
  }

  &:hover {
    border: 0;
    --r: 30px; /* the radius of the small circles */
    width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n2})));
    aspect-ratio: 1;
    $m: (); /* empty variable */
    /* loop through the number of circles*/
    @for $i from 1 through ($n2) {
      $m: append($m,
        radial-gradient(50% 50%,#000 98%,#0000) no-repeat
        calc(50% + 50%*cos(360deg*#{$i/$n2}))
        calc(50% + 50%*sin(360deg*#{$i/$n2}))
      / calc(2*var(--r)) calc(2*var(--r)),
      comma);
    }
    mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n2})),#0000 calc(var(--r)/tan(180deg/#{$n2}) + 1px)),#{$m};
    background: $orange;
    animation: wiggle 1s ease-in-out infinite;

    .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
      background-color: transparent;
      color: white;
      border-color: $orange;
    }

    .option-label {
      color: white;
    }
  }
}

.option-card-music_format {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 160px;
  aspect-ratio: 1;
  border-radius: 100%;
  gap: 20px;
  cursor: pointer;
  text-align: center;
  background-color: $info;
  margin: 16px;
  transition: all 0.2s ease-in-out;
  transform-origin: center;

  &:hover {
      border-radius: 40% 60% 60% 40% / 60% 40% 60% 40%;
      background-color: $orange;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
      animation: wiggle 1s ease-in-out infinite;
  }
}



#difficulty-hard {

  .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
    background-color: transparent;
    color: white;
    border: 0px;
  }

  &:hover {
    border: 0;
    --r: 20px; /* the radius of the small circles */
    width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n3})));
    aspect-ratio: 1;
    $m: (); /* empty variable */
    /* loop through the number of circles*/
    @for $i from 1 through ($n3) {
      $m: append($m,
        radial-gradient(50% 50%,#000 98%,#0000) no-repeat
        calc(50% + 50%*cos(360deg*#{$i/$n3}))
        calc(50% + 50%*sin(360deg*#{$i/$n3}))
      / calc(2*var(--r)) calc(2*var(--r)),
      comma);
    }
    mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n3})),#0000 calc(var(--r)/tan(180deg/#{$n3}) + 1px)),#{$m};
    background: $red;
    animation: wiggle 1s ease-in-out infinite;

    .hidden-radio:checked + .option-label, .option-card:has(.hidden-radio:checked) {
      background-color: transparent;
      color: white;
      border-color: $red;
    }

    .option-label {
      color: white;
    }
  }
}
.form-content p,
.form-content h2,
.form-content h1 {
  color: #ede6c7;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.963);
}

.form-content h1 {
  margin-bottom: 17px !important;
}

.form-content h2 {
  margin-top: 0;
  margin-bottom: 14px;
}

.form-content .text-center.my-5 {
  margin-bottom: 0 !important;
  margin-top: 4px !important;
}

.genre-preview {
  .genre-chip {
    font-size: 0.95rem;
    background-color: #ffeb3b;
    color: #222;
    border-radius: 20px;
    padding: 0.4em 0.8em;
    display: flex;
    align-items: center;
  }

  img {
    margin-right: 6px;
  }
}

.modal-content {
  border-radius: 8px !important;
  padding: 2rem 0
}

.modal-footer {
  border-top: 0 !important;
}

.modal-body {
  padding: 1rem 0 1rem 0 !important;
}

#shuffle {
  width: auto;
  padding: 0 16px;
  background: white;
  &:hover {
    background: $orange;
  }
}
