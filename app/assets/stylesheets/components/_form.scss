h1 {font-weight: 400;}
h2 {font-weight: 400;}

.form-align-center {
  height: calc(50vh);
  display: flex;
  align-items: center;
}

.option-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  gap: 24px;
  margin-top: 24px;
}

.option-card {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 160px;
  aspect-ratio: 1;
  border: 2px solid $gray;
  border-radius: 100%;
  gap: 20px;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  text-align: center;
  background-color: $info;
  margin: 16px;
  transition: all 0.3s ease-in-out;
  transform-origin: center;
}

// .option-card:hover {
//   border-color: $gray;
//   border-width: 3px;
//   background-color: $orange;
//   box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
// }

.option-label {
  font-size: 24px;
  font-weight: 400;
  color: $gray;
}

.sm {
  height: 40px;
  font-size: 18px !important;
  border-radius: 25px;
  align-content: center;
}

.hidden-radio {
  display: none;
}

.hidden-radio:checked + .option-label,
.option-card:has(.hidden-radio:checked) {
  background-color: $orange;
  color: white;
  border-color: $orange;
}

$n: 5;
$n2: 10;
$n3: 15;

@keyframes wiggle {
  0%   { transform: rotate(0deg); }
  25%  { transform: rotate(1deg); }
  50%  { transform: rotate(-1deg); }
  75%  { transform: rotate(1deg); }
  100% { transform: rotate(0deg); }
}

#difficulty-easy:hover {
  border: 0;
  --r: 45px; /* the radius of the small circles */
  width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n})));
  aspect-ratio: 1;
  $m: (); /* empty variable */
  /* loop through the number of circles*/
  @for $i from 1 through ($n) {
    $m: append($m,
      radial-gradient(50% 50%,#000 98%,#0000) no-repeat
      calc(50% + 50%*cos(360deg*#{$i/$n}))
      calc(50% + 50%*sin(360deg*#{$i/$n}))
     / calc(2*var(--r)) calc(2*var(--r)),
    comma);
  }
  mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n})),#0000 calc(var(--r)/tan(180deg/#{$n}) + 1px)),#{$m};
  background: $green;
  animation: wiggle 1s ease-in-out infinite;
  .option-label {
    color: white;
  }
}

#difficulty-medium:hover {
  border: 0;
  --r: 30px; /* the radius of the small circles */
  width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n2})));
  aspect-ratio: 1;
  $m: (); /* empty variable */
  /* loop through the number of circles*/
  @for $i from 1 through ($n2) {
    $m: append($m,
      radial-gradient(50% 50%,#000 98%,#0000) no-repeat
      calc(50% + 50%*cos(360deg*#{$i/$n2}))
      calc(50% + 50%*sin(360deg*#{$i/$n2}))
     / calc(2*var(--r)) calc(2*var(--r)),
    comma);
  }
  mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n2})),#0000 calc(var(--r)/tan(180deg/#{$n2}) + 1px)),#{$m};
  background: $orange;
  animation: wiggle 1s ease-in-out infinite;
  .option-label {
    color: white;
  }
}

#difficulty-hard:hover {
  border: 0;
  --r: 20px; /* the radius of the small circles */
  width: calc(2*var(--r)*(1 + 1/sin(180deg/#{$n3})));
  aspect-ratio: 1;
  $m: (); /* empty variable */
  /* loop through the number of circles*/
  @for $i from 1 through ($n3) {
    $m: append($m,
      radial-gradient(50% 50%,#000 98%,#0000) no-repeat
      calc(50% + 50%*cos(360deg*#{$i/$n3}))
      calc(50% + 50%*sin(360deg*#{$i/$n3}))
     / calc(2*var(--r)) calc(2*var(--r)),
    comma);
  }
  mask: radial-gradient(#000 calc(var(--r)/tan(180deg/#{$n3})),#0000 calc(var(--r)/tan(180deg/#{$n3}) + 1px)),#{$m};
  background: $red;
  animation: wiggle 1s ease-in-out infinite;

  .option-label {
    color: white;
  }
}

body {
  margin: 0;
  // min-height: 100vh;
  display: grid;
  place-content: center;
  grid-auto-flow: column;
  // gap: 30px;
  background: #E0E4CC;
  color: #E0E4CC;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
}
